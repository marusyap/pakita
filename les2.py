# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа. Элементы списка можно
# не запрашивать у пользователя, а указать явно, в программе.

sp=['1',3,[2,5,'7'],True,0.2,'Hello']
for elem in sp:
    print(type(elem))


# 2. Для списка реализовать обмен значений соседних элементов.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте.
# Для заполнения списка элементов нужно использовать функцию input().

sp=input('Введите целые значения списка через пробел').split()
k=len(sp)
spnew=sp
if k % 2 !=0:
    for i in range(0,k-1,2):
        spnew[i],spnew[i+1]=sp[i+1],sp[i]
else:
    for i in range(0,k,2):
        spnew[i],spnew[i+1]=sp[i+1],sp[i]
print(list(spnew))


# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и dict.

season=['Зима','Весна','Лето','Осень']
season_dict = {1:'Зима', 2:'Весна', 3:'Лето', 4:'Осень'}
month = int(input('Введите номер месяца: '))
if month==1 or month==2 or month==12:
    print(season_dict.get(1))
    print(season[0])
elif month==3 or month==4 or month==5:
    print(season_dict.get(2))
    print(season[1])
elif month==6 or month==7 or month==8:
    print(season_dict.get(3))
    print(season[2])
elif month==9 or month==10 or month==11:
    print(season_dict.get(4))
    print(season[3])
else:
    print('Номера такого месяца не существует')


# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки нужно пронумеровать.
# Если слово длинное, выводить только первые 10 букв в слове.

sp=input('Введите строку из нескольких слов')
k=1
spnew=[]
for i in range (sp.count(' ')+1):
    spnew=sp.split()
    if len(str(spnew))<=10:
        print(f'{k} {spnew[i]}')
        k+=1
    else:
        print(f'{k} {spnew[i] [0:10]}')
        k+=1


# 5. Реализовать структуру «Рейтинг», представляющую собой набор
# натуральных чисел, который не возрастает. У пользователя нужно
# запрашивать новый элемент рейтинга. Если в рейтинге существуют
# элементы с одинаковыми значениями, то новый элемент с тем же
# значением должен разместиться после них.
#
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.

my_list=[9,6,3,2,1]
rrr = int(input('Введите целое число (для выхода введите 999): '))
while rrr != 999:
    for i in range(len(my_list)):
        if my_list[i]==rrr:
            my_list.insert(i+1,rrr)
            break
        elif my_list[0]<rrr:
            my_list.insert(0,rrr)
            break
        elif my_list[-1]>rrr:
            my_list.append(rrr)
            break
        elif my_list[i]>rrr and my_list[i+1]<rrr:
            my_list.insert(i+1,rrr)
            break
    print(f'Новый список - {my_list}')
    rrr = int(input("Введите число "))
        


# 6. (Дополнительно) Реализовать структуру данных «Товары».
# Она должна представлять собой список кортежей. Каждый кортеж хранит
# информацию об отдельном товаре. В кортеже должно быть два
# элемента — номер товара и словарь с параметрами, то есть характеристиками
# товара: название, цена, количество, единица измерения.
# Структуру нужно сформировать программно, запросив все данные у пользователя.
#
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый
# ключ — характеристика товара, например, название. Тогда значение — список
# значений-характеристик, например, список названий товаров.
#
# Пример:
#
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }

